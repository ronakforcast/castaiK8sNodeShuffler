---
apiVersion: v1
kind: Namespace
metadata:
  name: cast-ai-management
  labels:
    name: cast-ai-management

# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: cast-ai-credentials
#   namespace: cast-ai-management
# type: Opaque
# data:
#   # Base64 encoded values - replace with your actual values
#   # echo -n "your-api-key-here" | base64
#   api-key: Z3B0LTUtcmFuZG9tLWJhc2U2NC12YWx1ZS0xMjM0NTY=
#   # echo -n "your-cluster-id-here" | base64
#   cluster-id: Z3B0LTUtcmFuZG9tLWJhc2U2NC12YWx1ZS0xMjM0NTY=

# ---
# # Secret for PagerDuty credentials
# apiVersion: v1
# kind: Secret
# metadata:
#   name: pagerduty-credentials
#   namespace: cast-ai-management
# type: Opaque
# data:
#   # Base64 encoded PagerDuty integration key
#   integration-key: <BASE64_ENCODED_PAGERDUTY_INTEGRATION_KEY>
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cast-ai-manager
  namespace: cast-ai-management

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cast-ai-manager
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "patch", "update"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "delete"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments", "replicasets"]
  verbs: ["get", "list"]
- apiGroups: ["extensions"]
  resources: ["daemonsets", "deployments", "replicasets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods/eviction"]  # For PDB-respecting eviction
  verbs: ["create"]
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]  # For PDB discovery
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "statefulsets", "replicasets"]
  verbs: ["get", "list", "patch", "update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cast-ai-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cast-ai-manager
subjects:
- kind: ServiceAccount
  name: cast-ai-manager
  namespace: cast-ai-management

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-patches-config
  namespace: cast-ai-management
data:
  patches.json: |
    [
      {
        "kind": "Deployment",
        "name": "nginx-deployment",
        "namespace": "default",
        "patch": {
          "metadata": {
            "annotations": {
              "argocd.argoproj.io/sync-options": "Skip=true"
            }
          },
          "spec": {
            "replicas": 0
          }
        }
      },
      {
        "kind": "Service",
        "name": "app1-service",
        "namespace": "default",
        "patch": {
          "metadata": {
            "labels": {
              "maintenance": "true"
            }
          }
        }
      }
    ]
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cast-ai-node-manager
  namespace: cast-ai-management
spec:
  # Run every day at 2 AM UTC - adjust as needed
  schedule: "0 2 * * *"
  timeZone: "UTC"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  startingDeadlineSeconds: 300
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600  # 1 hour timeout
      backoffLimit: 2
      template:
        metadata:
          labels:
            app: cast-ai-node-manager
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "cloud.google.com/gke-nodepool"  # Adjust this key based on your cluster's node labels. on run on non cast ai nodes
                        operator: Exists
          serviceAccountName: cast-ai-manager
          restartPolicy: Never
          containers:
          - name: cast-ai-manager
            image: ronakpatildocker/cast-ai-node-manager:latest
            imagePullPolicy: Always
            env:
            - name: CAST_AI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: cast-ai-credentials
                  key: api-key
            - name: CAST_AI_CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: cast-ai-credentials
                  key: cluster-id
            # Batch processing configuration
            - name: BATCH_SIZE
              value: "2"                    # Number of nodes per batch
            - name: BATCH_WAIT_SECONDS
              value: "60"                   # Wait time between batches (3 minutes)
            # Node draining configuration
            - name: DRAIN_TIMEOUT_MINUTES
              value: "3"                    # Timeout for graceful drain
            - name: MAX_PARALLEL_DRAINS
              value: "2"                     # Max parallel drains per batch
            # Retry configuration
            - name: MAX_RETRIES
              value: "3"                     # Max retry attempts for API calls
            - name: RETRY_DELAY_SECONDS
              value: "30"                    # Delay between retries
            - name: K8S_PATCHES
              valueFrom:
                configMapKeyRef:
                  name: k8s-patches-config
                  key: patches.json
            - name: LOG_LEVEL
              value: "INFO"    
            # - name: PAGERDUTY_INTEGRATION_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: pagerduty-credentials
            #       key: integration-key
            # - name: ALERTS_ENABLED
            #   value: "true"               # Enable or disable PagerDuty alerts           
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "500m"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 1000
              capabilities:
                drop:
                - ALL